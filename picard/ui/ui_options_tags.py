# -*- coding: utf-8 -*-

# Automatically generated - don't edit.
# Use `python setup.py build_ui` to update it.

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

class Ui_TagsOptionsPage(object):
    def setupUi(self, TagsOptionsPage):
        TagsOptionsPage.setObjectName(_fromUtf8("TagsOptionsPage"))
        TagsOptionsPage.resize(355, 485)
        self.vboxlayout = QtGui.QVBoxLayout(TagsOptionsPage)
        self.vboxlayout.setObjectName(_fromUtf8("vboxlayout"))
        self.write_tags = QtGui.QCheckBox(TagsOptionsPage)
        self.write_tags.setObjectName(_fromUtf8("write_tags"))
        self.vboxlayout.addWidget(self.write_tags)
        self.preserve_timestamps = QtGui.QCheckBox(TagsOptionsPage)
        self.preserve_timestamps.setObjectName(_fromUtf8("preserve_timestamps"))
        self.vboxlayout.addWidget(self.preserve_timestamps)
        self.before_tagging = QtGui.QGroupBox(TagsOptionsPage)
        self.before_tagging.setObjectName(_fromUtf8("before_tagging"))
        self.vboxlayout1 = QtGui.QVBoxLayout(self.before_tagging)
        self.vboxlayout1.setSpacing(2)
        self.vboxlayout1.setContentsMargins(-1, 6, -1, 7)
        self.vboxlayout1.setObjectName(_fromUtf8("vboxlayout1"))
        self.clear_existing_tags = QtGui.QCheckBox(self.before_tagging)
        self.clear_existing_tags.setObjectName(_fromUtf8("clear_existing_tags"))
        self.vboxlayout1.addWidget(self.clear_existing_tags)
        self.tags_keep_label = QtGui.QLabel(self.before_tagging)
        self.tags_keep_label.setObjectName(_fromUtf8("tags_keep_label"))
        self.vboxlayout1.addWidget(self.tags_keep_label)
        self.tags_keep = QtGui.QLineEdit(self.before_tagging)
        self.tags_keep.setObjectName(_fromUtf8("tags_keep"))
        self.vboxlayout1.addWidget(self.tags_keep)
        self.tags_clear_label = QtGui.QLabel(self.before_tagging)
        self.tags_clear_label.setObjectName(_fromUtf8("tags_clear_label"))
        self.vboxlayout1.addWidget(self.tags_clear_label)
        self.tags_clear = QtGui.QLineEdit(self.before_tagging)
        self.tags_clear.setObjectName(_fromUtf8("tags_clear"))
        self.vboxlayout1.addWidget(self.tags_clear)
        spacerItem = QtGui.QSpacerItem(0, 6, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.vboxlayout1.addItem(spacerItem)
        self.remove_id3_from_flac = QtGui.QCheckBox(self.before_tagging)
        self.remove_id3_from_flac.setObjectName(_fromUtf8("remove_id3_from_flac"))
        self.vboxlayout1.addWidget(self.remove_id3_from_flac)
        self.remove_ape_from_mp3 = QtGui.QCheckBox(self.before_tagging)
        self.remove_ape_from_mp3.setObjectName(_fromUtf8("remove_ape_from_mp3"))
        self.vboxlayout1.addWidget(self.remove_ape_from_mp3)
        spacerItem1 = QtGui.QSpacerItem(0, 6, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.vboxlayout1.addItem(spacerItem1)
        self.preserved_tags_label = QtGui.QLabel(self.before_tagging)
        self.preserved_tags_label.setObjectName(_fromUtf8("preserved_tags_label"))
        self.vboxlayout1.addWidget(self.preserved_tags_label)
        self.preserved_tags = QtGui.QLineEdit(self.before_tagging)
        self.preserved_tags.setObjectName(_fromUtf8("preserved_tags"))
        self.vboxlayout1.addWidget(self.preserved_tags)
        spacerItem2 = QtGui.QSpacerItem(0, 3, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.vboxlayout1.addItem(spacerItem2)
        self.preserved_tags_help = QtGui.QLabel(self.before_tagging)
        self.preserved_tags_help.setObjectName(_fromUtf8("preserved_tags_help"))
        self.vboxlayout1.addWidget(self.preserved_tags_help)
        self.vboxlayout.addWidget(self.before_tagging)
        self.tag_compatibility = QtGui.QGroupBox(TagsOptionsPage)
        self.tag_compatibility.setObjectName(_fromUtf8("tag_compatibility"))
        self.vboxlayout2 = QtGui.QVBoxLayout(self.tag_compatibility)
        self.vboxlayout2.setSpacing(2)
        self.vboxlayout2.setContentsMargins(-1, 6, -1, 7)
        self.vboxlayout2.setObjectName(_fromUtf8("vboxlayout2"))
        self.id3v2_version = QtGui.QGroupBox(self.tag_compatibility)
        self.id3v2_version.setFlat(False)
        self.id3v2_version.setCheckable(False)
        self.id3v2_version.setObjectName(_fromUtf8("id3v2_version"))
        self.horizontalLayout = QtGui.QHBoxLayout(self.id3v2_version)
        self.horizontalLayout.setContentsMargins(-1, 3, -1, 4)
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.write_id3v23 = QtGui.QRadioButton(self.id3v2_version)
        self.write_id3v23.setObjectName(_fromUtf8("write_id3v23"))
        self.horizontalLayout.addWidget(self.write_id3v23)
        self.write_id3v24 = QtGui.QRadioButton(self.id3v2_version)
        self.write_id3v24.setObjectName(_fromUtf8("write_id3v24"))
        self.horizontalLayout.addWidget(self.write_id3v24)
        spacerItem3 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.vboxlayout2.addWidget(self.id3v2_version)
        spacerItem4 = QtGui.QSpacerItem(0, 3, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.vboxlayout2.addItem(spacerItem4)
        self.id3v2_text_encoding = QtGui.QGroupBox(self.tag_compatibility)
        self.id3v2_text_encoding.setObjectName(_fromUtf8("id3v2_text_encoding"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.id3v2_text_encoding)
        self.horizontalLayout_2.setContentsMargins(-1, 3, -1, 4)
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.enc_utf8 = QtGui.QRadioButton(self.id3v2_text_encoding)
        self.enc_utf8.setObjectName(_fromUtf8("enc_utf8"))
        self.horizontalLayout_2.addWidget(self.enc_utf8)
        self.enc_utf16 = QtGui.QRadioButton(self.id3v2_text_encoding)
        self.enc_utf16.setObjectName(_fromUtf8("enc_utf16"))
        self.horizontalLayout_2.addWidget(self.enc_utf16)
        self.enc_iso88591 = QtGui.QRadioButton(self.id3v2_text_encoding)
        self.enc_iso88591.setObjectName(_fromUtf8("enc_iso88591"))
        self.horizontalLayout_2.addWidget(self.enc_iso88591)
        spacerItem5 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.vboxlayout2.addWidget(self.id3v2_text_encoding)
        spacerItem6 = QtGui.QSpacerItem(0, 6, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.vboxlayout2.addItem(spacerItem6)
        self.hbox_id3v23_join_with = QtGui.QHBoxLayout()
        self.hbox_id3v23_join_with.setSpacing(10)
        self.hbox_id3v23_join_with.setObjectName(_fromUtf8("hbox_id3v23_join_with"))
        self.id3v23_join_with_label = QtGui.QLabel(self.tag_compatibility)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.id3v23_join_with_label.sizePolicy().hasHeightForWidth())
        self.id3v23_join_with_label.setSizePolicy(sizePolicy)
        self.id3v23_join_with_label.setObjectName(_fromUtf8("id3v23_join_with_label"))
        self.hbox_id3v23_join_with.addWidget(self.id3v23_join_with_label)
        self.id3v23_join_with = QtGui.QComboBox(self.tag_compatibility)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.id3v23_join_with.sizePolicy().hasHeightForWidth())
        self.id3v23_join_with.setSizePolicy(sizePolicy)
        self.id3v23_join_with.setMinimumSize(QtCore.QSize(100, 0))
        self.id3v23_join_with.setEditable(True)
        self.id3v23_join_with.setObjectName(_fromUtf8("id3v23_join_with"))
        self.id3v23_join_with.addItem(_fromUtf8(""))
        self.id3v23_join_with.setItemText(0, _fromUtf8("/"))
        self.id3v23_join_with.addItem(_fromUtf8(""))
        self.id3v23_join_with.setItemText(1, _fromUtf8("; "))
        self.id3v23_join_with.addItem(_fromUtf8(""))
        self.id3v23_join_with.setItemText(2, _fromUtf8(" / "))
        self.hbox_id3v23_join_with.addWidget(self.id3v23_join_with)
        spacerItem7 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.hbox_id3v23_join_with.addItem(spacerItem7)
        self.vboxlayout2.addLayout(self.hbox_id3v23_join_with)
        spacerItem8 = QtGui.QSpacerItem(0, 3, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        self.vboxlayout2.addItem(spacerItem8)
        self.write_id3v1 = QtGui.QCheckBox(self.tag_compatibility)
        self.write_id3v1.setObjectName(_fromUtf8("write_id3v1"))
        self.vboxlayout2.addWidget(self.write_id3v1)
        self.vboxlayout.addWidget(self.tag_compatibility)
        spacerItem9 = QtGui.QSpacerItem(1, 1, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.vboxlayout.addItem(spacerItem9)

        self.retranslateUi(TagsOptionsPage)
        QtCore.QMetaObject.connectSlotsByName(TagsOptionsPage)
        TagsOptionsPage.setTabOrder(self.write_tags, self.preserve_timestamps)
        TagsOptionsPage.setTabOrder(self.preserve_timestamps, self.clear_existing_tags)
        TagsOptionsPage.setTabOrder(self.clear_existing_tags, self.tags_keep)
        TagsOptionsPage.setTabOrder(self.tags_keep, self.remove_id3_from_flac)
        TagsOptionsPage.setTabOrder(self.remove_id3_from_flac, self.remove_ape_from_mp3)
        TagsOptionsPage.setTabOrder(self.remove_ape_from_mp3, self.preserved_tags)
        TagsOptionsPage.setTabOrder(self.preserved_tags, self.write_id3v23)
        TagsOptionsPage.setTabOrder(self.write_id3v23, self.write_id3v24)
        TagsOptionsPage.setTabOrder(self.write_id3v24, self.enc_utf8)
        TagsOptionsPage.setTabOrder(self.enc_utf8, self.enc_utf16)
        TagsOptionsPage.setTabOrder(self.enc_utf16, self.enc_iso88591)
        TagsOptionsPage.setTabOrder(self.enc_iso88591, self.id3v23_join_with)
        TagsOptionsPage.setTabOrder(self.id3v23_join_with, self.write_id3v1)

    def retranslateUi(self, TagsOptionsPage):
        self.write_tags.setToolTip(_("<html><head/><body><p>Uncheck to disable Picard from writing data. Picard may still move/rename your files according to your settings.</p></body></html>"))
        self.write_tags.setText(_("Write tags to files"))
        self.preserve_timestamps.setToolTip(_("<html><head/><body><p>If checked, does not update the Last Modified date and time of your music files when it writes new tags to them.</p></body></html>"))
        self.preserve_timestamps.setText(_("Preserve timestamps of tagged files"))
        self.before_tagging.setTitle(_("Before Tagging"))
        self.clear_existing_tags.setToolTip(_("<html><head/><body><p>Checking this will remove all existing metadata and leave your files with only MusicBrainz metadata. Information you may have added through another media player such as genre, comments or ratings will be removed.</p></body></html>"))
        self.clear_existing_tags.setText(_("Clear existing tags"))
        self.tags_keep_label.setToolTip(_("<html><head/><body><p>Add any tags that you don\'t want to be cleared here.</p><p><span style=\" font-weight:600;\">Advanced: </span>If you want to keep ID3 tags not managed by MusicBrainz e.g. Synchronised Lyrics (SYLT) use \'_id3:SYLT*\' here.</p></body></html>"))
        self.tags_keep_label.setText(_("Except keep the following tags:"))
        self.tags_keep.setToolTip(_("<html><head/><body><p>Add any tags that you don\'t want to be cleared here.</p><p><span style=\" font-weight:600;\">Advanced: </span>If you want to keep ID3 tags not managed by MusicBrainz e.g. Synchronised Lyrics (SYLT) use \'_id3:SYLT*\' here.</p></body></html>"))
        self.tags_clear_label.setToolTip(_("<html><head/><body><p>Add any tags that you do want cleared here.</p><p><span style=\" font-weight:600;\">Advanced: </span>If you want to clear ID3 tags not managed by MusicBrainz e.g. Synchronised Lyrics (SYLT) use \'_id3:SYLT*\' here.</p></body></html>"))
        self.tags_clear_label.setText(_("Except clear the following tags:"))
        self.tags_clear.setToolTip(_("<html><head/><body><p>Add any tags that you do want cleared here.</p><p><span style=\" font-weight:600;\">Advanced: </span>If you want to clear ID3 tags not managed by MusicBrainz e.g. Synchronised Lyrics (SYLT) use \'_id3:SYLT*\' here.</p></body></html>"))
        self.remove_id3_from_flac.setToolTip(_("<html><head/><body><p>Check to remove ID3 tags from FLAC files – Vorbis Comments are recommended for FLAC files. Picard will write Vorbis Comments to FLACs regardless of this setting.</p></body></html>"))
        self.remove_id3_from_flac.setText(_("Remove ID3 tags from FLAC files"))
        self.remove_ape_from_mp3.setToolTip(_("<html><head/><body><p>Check to remove APEv2 tags from MP3 files – ID3 is recommended for MP3s. Picard will write ID3 tags to MP3s regardless of this setting.</p></body></html>"))
        self.remove_ape_from_mp3.setText(_("Remove APEv2 tags from MP3 files"))
        self.preserved_tags_label.setText(_("Prevent these tags from being overwritten with MusicBrainz data:"))
        self.preserved_tags.setToolTip(_("<html><head/><body><p>Tag lists are separated by commas and are case-sensitive.</p></body></html>"))
        self.preserved_tags_help.setText(_("Tag lists are separated by commas and are case-sensitive."))
        self.tag_compatibility.setTitle(_("Tag compatibility"))
        self.id3v2_version.setToolTip(_("<html><head/><body><p>Although id3v2.4 is the latest version, its support in music players is still lacking. </p><p>Whilst software such as foobar2000 and MediaMonkey have no problem using version 2.4 tags, you will not be able to read the tags in Windows Explorer or Windows Media Player (in any Windows or WMP version, including those in Windows 8.1). Apple iTunes is also still based in id3v23, and support for id3v24 in other media players (such as smartphones) is variable.</p></body></html>"))
        self.id3v2_version.setTitle(_("ID3v2 version"))
        self.write_id3v23.setText(_("2.3"))
        self.write_id3v24.setText(_("2.4"))
        self.id3v2_text_encoding.setToolTip(_("<html><head/><body><p>The default for version 2.3 is UTF-16, the default for version 2.4 is UTF-8. Use ISO-8859-1 <span style=\" font-weight:600;\">only</span> if you face compatibility issues with your player.</p></body></html>"))
        self.id3v2_text_encoding.setTitle(_("ID3v2 text encoding"))
        self.enc_utf8.setText(_("UTF-8"))
        self.enc_utf16.setText(_("UTF-16"))
        self.enc_iso88591.setText(_("ISO-8859-1"))
        self.id3v23_join_with_label.setToolTip(_("<html><head/><body><p>Id3v23 does not support multi-value tags, and so Picard flattens these to strings before saving them to id3v23 tags. This setting defines the string used to separate the values when flattened.</p><p>The default is \'/\' to maintain compatibility with previous Picard releases, however \'; \' may be a better selection since tags more often contain a \'/\' than a \';\' and because Picard displays multi-value tags separated by \'; \'.</p></body></html>"))
        self.id3v23_join_with_label.setText(_("Join multiple ID3v2.3 tags with:"))
        self.id3v23_join_with.setToolTip(_("<html><head/><body><p>Default is \'/\' to maintain compatibility with previous Picard releases.</p><p>New alternatives are \';_\' or \'_/_\' or type your own. </p></body></html>"))
        self.write_id3v1.setToolTip(_("<html><head/><body><p><span style=\" font-weight:600;\">Not recommended! </span>ID3v1.1 tags are obsolete and may not work with non-latin scripts.</p></body></html>"))
        self.write_id3v1.setText(_("Also include ID3v1 tags in the files"))

